{
  "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/path-finder": {
    "versionSfCore": null,
    "versionFramework": "4.1.12",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "awslabs",
            "app": "aws-labs-api",
            "service": "path-finder",
            "custom": {
              "stage": "dev-ny",
              "region": "eu-west-1"
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev-ny",
              "region": "eu-west-1",
              "environment": {
                "SERVICE_STAGE": "dev-ny",
                "REGION": "eu-west-1",
                "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-graph-node"
                    }
                  },
                  "GetDashgraphDashnodesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-nodes"
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-node-by-id"
                    }
                  },
                  "UpdateDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-graph-node"
                    }
                  },
                  "DeleteDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-graph-node"
                    }
                  },
                  "CreateDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-edge"
                    }
                  },
                  "GetDashedgesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edges"
                    }
                  },
                  "GetDashedgeDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edge-by-id"
                    }
                  },
                  "UpdateDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-edge"
                    }
                  },
                  "DeleteDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-edge"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "path-finder",
                                "dev-ny",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "path-finder",
                            "dev-ny",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-create-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashgraphDashnodeLogGroup"
                    ]
                  },
                  "GetDashgraphDashnodesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-graph-nodes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodesLogGroup"
                    ]
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-graph-node-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodeDashbyDashidLogGroup"
                    ]
                  },
                  "UpdateDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-update-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashgraphDashnodeLogGroup"
                    ]
                  },
                  "DeleteDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-delete-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashgraphDashnodeLogGroup"
                    ]
                  },
                  "CreateDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-create-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashedgeLogGroup"
                    ]
                  },
                  "GetDashedgesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-edges",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashedgesLogGroup"
                    ]
                  },
                  "GetDashedgeDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-edge-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashedgeDashbyDashidLogGroup"
                    ]
                  },
                  "UpdateDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-update-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashedgeLogGroup"
                    ]
                  },
                  "DeleteDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-delete-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashedgeLogGroup"
                    ]
                  },
                  "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashgraphDashnodesLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashgraphDashnodeDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashedgesLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashedgeDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-ny-path-finder",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceGraphDashnodes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "graph-nodes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceGraphDashnodesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEdges": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "edges",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEdgesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashgraphDashnodesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodEdgesPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashedgesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashedgesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashedgeDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashedgeDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayPathfinderRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "path-finder-dev-ny | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreateGraphNodeSchema",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "neighbors": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdateGraphNodeSchema",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "neighbors": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodEdgesPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreateEdgeSchema",
                        "required": [
                          "from",
                          "target",
                          "cost"
                        ],
                        "properties": {
                          "from": {
                            "type": "string"
                          },
                          "target": {
                            "type": "string"
                          },
                          "cost": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdateEdgeSchema",
                        "properties": {
                          "from": {
                            "type": "string"
                          },
                          "target": {
                            "type": "string"
                          },
                          "cost": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayDeployment1721247682546": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev-ny"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodGraphDashnodesPost",
                      "ApiGatewayMethodGraphDashnodesGet",
                      "ApiGatewayMethodGraphDashnodesIdVarGet",
                      "ApiGatewayMethodGraphDashnodesIdVarPut",
                      "ApiGatewayMethodGraphDashnodesIdVarDelete",
                      "ApiGatewayMethodEdgesPost",
                      "ApiGatewayMethodEdgesGet",
                      "ApiGatewayMethodEdgesIdVarGet",
                      "ApiGatewayMethodEdgesIdVarPut",
                      "ApiGatewayMethodEdgesIdVarDelete"
                    ]
                  },
                  "CreateDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashgraphDashnodesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashgraphDashnodesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashedgesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashedgesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashedgeDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-CreateDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashgraphDashnodesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodesLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-UpdateDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-DeleteDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-CreateDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashedgesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashedgesLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashedgeDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-UpdateDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-DeleteDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev-ny"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "create-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreateGraphNodeSchema",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "neighbors": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-create-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
              },
              "get-graph-nodes": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-graph-nodes",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
              },
              "get-graph-node-by-id": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-graph-node-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
              },
              "update-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "put",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdateGraphNodeSchema",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "neighbors": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-update-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
              },
              "delete-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-delete-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
              },
              "create-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreateEdgeSchema",
                            "required": [
                              "from",
                              "target",
                              "cost"
                            ],
                            "properties": {
                              "from": {
                                "type": "string"
                              },
                              "target": {
                                "type": "string"
                              },
                              "cost": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-create-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
              },
              "get-edges": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-edges",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
              },
              "get-edge-by-id": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-edge-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
              },
              "update-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "put",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdateEdgeSchema",
                            "properties": {
                              "from": {
                                "type": "string"
                              },
                              "target": {
                                "type": "string"
                              },
                              "cost": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-update-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
              },
              "delete-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-delete-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
              }
            }
          },
          "configFileDirPath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/path-finder",
          "config": {
            "type": "env"
          },
          "options": {},
          "stage": "${self:custom.stage}",
          "dashboard": null
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "awslabs",
            "app": "aws-labs-api",
            "service": "path-finder",
            "custom": {
              "stage": "dev-ny",
              "region": "eu-west-1"
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev-ny",
              "region": "eu-west-1",
              "environment": {
                "SERVICE_STAGE": "dev-ny",
                "REGION": "eu-west-1",
                "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-graph-node"
                    }
                  },
                  "GetDashgraphDashnodesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-nodes"
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-node-by-id"
                    }
                  },
                  "UpdateDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-graph-node"
                    }
                  },
                  "DeleteDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-graph-node"
                    }
                  },
                  "CreateDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-edge"
                    }
                  },
                  "GetDashedgesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edges"
                    }
                  },
                  "GetDashedgeDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edge-by-id"
                    }
                  },
                  "UpdateDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-edge"
                    }
                  },
                  "DeleteDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-edge"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "path-finder",
                                "dev-ny",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "path-finder",
                            "dev-ny",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-create-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashgraphDashnodeLogGroup"
                    ]
                  },
                  "GetDashgraphDashnodesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-graph-nodes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodesLogGroup"
                    ]
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-graph-node-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodeDashbyDashidLogGroup"
                    ]
                  },
                  "UpdateDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-update-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashgraphDashnodeLogGroup"
                    ]
                  },
                  "DeleteDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-delete-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashgraphDashnodeLogGroup"
                    ]
                  },
                  "CreateDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-create-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashedgeLogGroup"
                    ]
                  },
                  "GetDashedgesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-edges",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashedgesLogGroup"
                    ]
                  },
                  "GetDashedgeDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-edge-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashedgeDashbyDashidLogGroup"
                    ]
                  },
                  "UpdateDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-update-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashedgeLogGroup"
                    ]
                  },
                  "DeleteDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-delete-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashedgeLogGroup"
                    ]
                  },
                  "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashgraphDashnodesLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashgraphDashnodeDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashedgesLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashedgeDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-ny-path-finder",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceGraphDashnodes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "graph-nodes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceGraphDashnodesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEdges": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "edges",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEdgesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashgraphDashnodesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodEdgesPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashedgesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashedgesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashedgeDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashedgeDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayPathfinderRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "path-finder-dev-ny | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreateGraphNodeSchema",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "neighbors": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdateGraphNodeSchema",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "neighbors": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodEdgesPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreateEdgeSchema",
                        "required": [
                          "from",
                          "target",
                          "cost"
                        ],
                        "properties": {
                          "from": {
                            "type": "string"
                          },
                          "target": {
                            "type": "string"
                          },
                          "cost": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdateEdgeSchema",
                        "properties": {
                          "from": {
                            "type": "string"
                          },
                          "target": {
                            "type": "string"
                          },
                          "cost": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayDeployment1721247682546": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev-ny"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodGraphDashnodesPost",
                      "ApiGatewayMethodGraphDashnodesGet",
                      "ApiGatewayMethodGraphDashnodesIdVarGet",
                      "ApiGatewayMethodGraphDashnodesIdVarPut",
                      "ApiGatewayMethodGraphDashnodesIdVarDelete",
                      "ApiGatewayMethodEdgesPost",
                      "ApiGatewayMethodEdgesGet",
                      "ApiGatewayMethodEdgesIdVarGet",
                      "ApiGatewayMethodEdgesIdVarPut",
                      "ApiGatewayMethodEdgesIdVarDelete"
                    ]
                  },
                  "CreateDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashgraphDashnodesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashgraphDashnodesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashedgesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashedgesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashedgeDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-CreateDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashgraphDashnodesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodesLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-UpdateDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-DeleteDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-CreateDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashedgesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashedgesLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashedgeDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-UpdateDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-DeleteDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev-ny"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "create-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreateGraphNodeSchema",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "neighbors": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-create-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
              },
              "get-graph-nodes": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-graph-nodes",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
              },
              "get-graph-node-by-id": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-graph-node-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
              },
              "update-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "put",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdateGraphNodeSchema",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "neighbors": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-update-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
              },
              "delete-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-delete-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
              },
              "create-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreateEdgeSchema",
                            "required": [
                              "from",
                              "target",
                              "cost"
                            ],
                            "properties": {
                              "from": {
                                "type": "string"
                              },
                              "target": {
                                "type": "string"
                              },
                              "cost": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-create-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
              },
              "get-edges": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-edges",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
              },
              "get-edge-by-id": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-edge-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
              },
              "update-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "put",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdateEdgeSchema",
                            "properties": {
                              "from": {
                                "type": "string"
                              },
                              "target": {
                                "type": "string"
                              },
                              "cost": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-update-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
              },
              "delete-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-delete-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
              }
            }
          },
          "configFileDirPath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/path-finder",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "${self:custom.stage}",
          "dashboard": null
        },
        "resolvers": {}
      },
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "awslabs",
            "app": "aws-labs-api",
            "service": "path-finder",
            "custom": {
              "stage": "dev-ny",
              "region": "eu-west-1"
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev-ny",
              "region": "eu-west-1",
              "environment": {
                "SERVICE_STAGE": "dev-ny",
                "REGION": "eu-west-1",
                "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-graph-node"
                    }
                  },
                  "GetDashgraphDashnodesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-nodes"
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-node-by-id"
                    }
                  },
                  "UpdateDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-graph-node"
                    }
                  },
                  "DeleteDashgraphDashnodeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-graph-node"
                    }
                  },
                  "CreateDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-edge"
                    }
                  },
                  "GetDashedgesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edges"
                    }
                  },
                  "GetDashedgeDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edge-by-id"
                    }
                  },
                  "UpdateDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-edge"
                    }
                  },
                  "DeleteDashedgeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-edge"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "path-finder",
                                "dev-ny",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "path-finder",
                            "dev-ny",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-create-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashgraphDashnodeLogGroup"
                    ]
                  },
                  "GetDashgraphDashnodesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-graph-nodes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodesLogGroup"
                    ]
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-graph-node-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodeDashbyDashidLogGroup"
                    ]
                  },
                  "UpdateDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-update-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashgraphDashnodeLogGroup"
                    ]
                  },
                  "DeleteDashgraphDashnodeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/graph-node-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-delete-graph-node",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashgraphDashnodeLogGroup"
                    ]
                  },
                  "CreateDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-create-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashedgeLogGroup"
                    ]
                  },
                  "GetDashedgesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-edges",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashedgesLogGroup"
                    ]
                  },
                  "GetDashedgeDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-get-edge-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashedgeDashbyDashidLogGroup"
                    ]
                  },
                  "UpdateDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-update-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashedgeLogGroup"
                    ]
                  },
                  "DeleteDashedgeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                      },
                      "Handler": "src/infrastructure/api/edge-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "path-finder-dev-ny-delete-edge",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashedgeLogGroup"
                    ]
                  },
                  "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashgraphDashnodesLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashgraphDashnodeDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashgraphDashnodeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashedgesLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashedgeDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashedgeLambdaFunction"
                      },
                      "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-ny-path-finder",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceGraphDashnodes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "graph-nodes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceGraphDashnodesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEdges": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "edges",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEdgesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashgraphDashnodesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashgraphDashnodeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteDashgraphDashnodeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodEdgesPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdges"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashedgesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashedgesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashedgeDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashedgeDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPathfinderRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEdgesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEdgesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashedgeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteDashedgeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayPathfinderRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "path-finder-dev-ny | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreateGraphNodeSchema",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "neighbors": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdateGraphNodeSchema",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "neighbors": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodEdgesPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreateEdgeSchema",
                        "required": [
                          "from",
                          "target",
                          "cost"
                        ],
                        "properties": {
                          "from": {
                            "type": "string"
                          },
                          "target": {
                            "type": "string"
                          },
                          "cost": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdateEdgeSchema",
                        "properties": {
                          "from": {
                            "type": "string"
                          },
                          "target": {
                            "type": "string"
                          },
                          "cost": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayDeployment1721247682546": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev-ny"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodGraphDashnodesPost",
                      "ApiGatewayMethodGraphDashnodesGet",
                      "ApiGatewayMethodGraphDashnodesIdVarGet",
                      "ApiGatewayMethodGraphDashnodesIdVarPut",
                      "ApiGatewayMethodGraphDashnodesIdVarDelete",
                      "ApiGatewayMethodEdgesPost",
                      "ApiGatewayMethodEdgesGet",
                      "ApiGatewayMethodEdgesIdVarGet",
                      "ApiGatewayMethodEdgesIdVarPut",
                      "ApiGatewayMethodEdgesIdVarDelete"
                    ]
                  },
                  "CreateDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashgraphDashnodesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashgraphDashnodesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashgraphDashnodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashedgesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashedgesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashedgeDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashedgeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashedgeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-CreateDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashgraphDashnodesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodesLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-UpdateDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashgraphDashnodeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-DeleteDashgraphDashnodeLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-CreateDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashedgesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashedgesLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashedgeDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-GetDashedgeDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-UpdateDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashedgeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-DeleteDashedgeLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev-ny"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-path-finder-dev-ny-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "create-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreateGraphNodeSchema",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "neighbors": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-create-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
              },
              "get-graph-nodes": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-graph-nodes",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
              },
              "get-graph-node-by-id": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-graph-node-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
              },
              "update-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "put",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdateGraphNodeSchema",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "neighbors": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-update-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
              },
              "delete-graph-node": {
                "handler": "src/infrastructure/api/graph-node-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "graph-nodes/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-delete-graph-node",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
              },
              "create-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreateEdgeSchema",
                            "required": [
                              "from",
                              "target",
                              "cost"
                            ],
                            "properties": {
                              "from": {
                                "type": "string"
                              },
                              "target": {
                                "type": "string"
                              },
                              "cost": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-create-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
              },
              "get-edges": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-edges",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
              },
              "get-edge-by-id": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-get-edge-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
              },
              "update-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "put",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdateEdgeSchema",
                            "properties": {
                              "from": {
                                "type": "string"
                              },
                              "target": {
                                "type": "string"
                              },
                              "cost": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-update-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
              },
              "delete-edge": {
                "handler": "src/infrastructure/api/edge-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "edges/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "path-finder-dev-ny-delete-edge",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
              }
            }
          },
          "configFileDirPath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/path-finder",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "${self:custom.stage}",
          "dashboard": null
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/path-finder",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "awslabs",
      "app": "aws-labs-api",
      "service": "path-finder",
      "custom": {
        "stage": "dev-ny",
        "region": "eu-west-1"
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev-ny",
        "region": "eu-west-1",
        "environment": {
          "SERVICE_STAGE": "dev-ny",
          "REGION": "eu-west-1",
          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs"
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateDashgraphDashnodeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-graph-node"
              }
            },
            "GetDashgraphDashnodesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-nodes"
              }
            },
            "GetDashgraphDashnodeDashbyDashidLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-graph-node-by-id"
              }
            },
            "UpdateDashgraphDashnodeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-graph-node"
              }
            },
            "DeleteDashgraphDashnodeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-graph-node"
              }
            },
            "CreateDashedgeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-create-edge"
              }
            },
            "GetDashedgesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edges"
              }
            },
            "GetDashedgeDashbyDashidLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-get-edge-by-id"
              }
            },
            "UpdateDashedgeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-update-edge"
              }
            },
            "DeleteDashedgeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/path-finder-dev-ny-delete-edge"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "path-finder",
                          "dev-ny",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/path-finder-dev-ny*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "path-finder",
                      "dev-ny",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateDashgraphDashnodeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/graph-node-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-create-graph-node",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateDashgraphDashnodeLogGroup"
              ]
            },
            "GetDashgraphDashnodesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/graph-node-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-get-graph-nodes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetDashgraphDashnodesLogGroup"
              ]
            },
            "GetDashgraphDashnodeDashbyDashidLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/graph-node-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-get-graph-node-by-id",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetDashgraphDashnodeDashbyDashidLogGroup"
              ]
            },
            "UpdateDashgraphDashnodeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/graph-node-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-update-graph-node",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateDashgraphDashnodeLogGroup"
              ]
            },
            "DeleteDashgraphDashnodeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/graph-node-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-delete-graph-node",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteDashgraphDashnodeLogGroup"
              ]
            },
            "CreateDashedgeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/edge-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-create-edge",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateDashedgeLogGroup"
              ]
            },
            "GetDashedgesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/edge-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-get-edges",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetDashedgesLogGroup"
              ]
            },
            "GetDashedgeDashbyDashidLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/edge-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-get-edge-by-id",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetDashedgeDashbyDashidLogGroup"
              ]
            },
            "UpdateDashedgeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/edge-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-update-edge",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateDashedgeLogGroup"
              ]
            },
            "DeleteDashedgeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/path-finder/dev-ny/1721247685550-2024-07-17T20:21:25.550Z/path-finder.zip"
                },
                "Handler": "src/infrastructure/api/edge-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "path-finder-dev-ny-delete-edge",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/path-finder?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteDashedgeLogGroup"
              ]
            },
            "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateDashgraphDashnodeLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetDashgraphDashnodesLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetDashgraphDashnodeDashbyDashidLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateDashgraphDashnodeLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteDashgraphDashnodeLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateDashedgeLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetDashedgesLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetDashedgeDashbyDashidLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateDashedgeLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteDashedgeLambdaFunction"
                },
                "CodeSha256": "fS04F6JDXSrAI8A89Q2Kc38DgXIFn/3N/D5IXeWmH18="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-ny-path-finder",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceGraphDashnodes": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "graph-nodes",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceGraphDashnodesIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceGraphDashnodes"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEdges": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "edges",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEdgesIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceEdges"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodGraphDashnodesPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceGraphDashnodes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateDashgraphDashnodeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayPathfinderRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "CreateDashgraphDashnodeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodGraphDashnodesGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceGraphDashnodes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetDashgraphDashnodesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetDashgraphDashnodesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodGraphDashnodesIdVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodGraphDashnodesIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateDashgraphDashnodeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayPathfinderRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "UpdateDashgraphDashnodeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodGraphDashnodesIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceGraphDashnodesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteDashgraphDashnodeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteDashgraphDashnodeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEdgesPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEdges"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateDashedgeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayPathfinderRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodEdgesPostApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "CreateDashedgeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEdgesGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEdges"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetDashedgesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetDashedgesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEdgesIdVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEdgesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetDashedgeDashbyDashidLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetDashedgeDashbyDashidLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEdgesIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEdgesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateDashedgeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayPathfinderRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "UpdateDashedgeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEdgesIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEdgesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteDashedgeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteDashedgeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayPathfinderRequestValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true,
                "Name": "path-finder-dev-ny | Validate request body and querystring parameters"
              }
            },
            "ApiGatewayMethodGraphDashnodesPostApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "definitions": {},
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "title": "CreateGraphNodeSchema",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "neighbors": {
                      "type": "array"
                    }
                  }
                }
              }
            },
            "ApiGatewayMethodGraphDashnodesIdVarPutApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "definitions": {},
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "title": "UpdateGraphNodeSchema",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "neighbors": {
                      "type": "array"
                    }
                  }
                }
              }
            },
            "ApiGatewayMethodEdgesPostApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "definitions": {},
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "title": "CreateEdgeSchema",
                  "required": [
                    "from",
                    "target",
                    "cost"
                  ],
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    },
                    "cost": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "ApiGatewayMethodEdgesIdVarPutApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "definitions": {},
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "title": "UpdateEdgeSchema",
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    },
                    "cost": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "ApiGatewayDeployment1721247682546": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev-ny"
              },
              "DependsOn": [
                "ApiGatewayMethodGraphDashnodesPost",
                "ApiGatewayMethodGraphDashnodesGet",
                "ApiGatewayMethodGraphDashnodesIdVarGet",
                "ApiGatewayMethodGraphDashnodesIdVarPut",
                "ApiGatewayMethodGraphDashnodesIdVarDelete",
                "ApiGatewayMethodEdgesPost",
                "ApiGatewayMethodEdgesGet",
                "ApiGatewayMethodEdgesIdVarGet",
                "ApiGatewayMethodEdgesIdVarPut",
                "ApiGatewayMethodEdgesIdVarDelete"
              ]
            },
            "CreateDashgraphDashnodeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateDashgraphDashnodeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetDashgraphDashnodesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetDashgraphDashnodesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetDashgraphDashnodeDashbyDashidLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetDashgraphDashnodeDashbyDashidLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateDashgraphDashnodeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateDashgraphDashnodeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteDashgraphDashnodeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteDashgraphDashnodeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateDashedgeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateDashedgeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetDashedgesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetDashedgesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetDashedgeDashbyDashidLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetDashedgeDashbyDashidLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateDashedgeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateDashedgeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteDashedgeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteDashedgeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-ServerlessDeploymentBucketName"
              }
            },
            "CreateDashgraphDashnodeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-CreateDashgraphDashnodeLambdaFunctionQualifiedArn"
              }
            },
            "GetDashgraphDashnodesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodesLambdaFunctionQualifiedArn"
              }
            },
            "GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn"
              }
            },
            "UpdateDashgraphDashnodeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-UpdateDashgraphDashnodeLambdaFunctionQualifiedArn"
              }
            },
            "DeleteDashgraphDashnodeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-DeleteDashgraphDashnodeLambdaFunctionQualifiedArn"
              }
            },
            "CreateDashedgeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-CreateDashedgeLambdaFunctionQualifiedArn"
              }
            },
            "GetDashedgesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-GetDashedgesLambdaFunctionQualifiedArn"
              }
            },
            "GetDashedgeDashbyDashidLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-GetDashedgeDashbyDashidLambdaFunctionQualifiedArn"
              }
            },
            "UpdateDashedgeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-UpdateDashedgeLambdaFunctionQualifiedArn"
              }
            },
            "DeleteDashedgeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-DeleteDashedgeLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev-ny"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-path-finder-dev-ny-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "create-graph-node": {
          "handler": "src/infrastructure/api/graph-node-api.handler",
          "events": [
            {
              "http": {
                "path": "graph-nodes",
                "method": "post",
                "request": {
                  "schemas": {
                    "application/json": {
                      "definitions": {},
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "title": "CreateGraphNodeSchema",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "neighbors": {
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-create-graph-node",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateDashgraphDashnodeLambdaVersiondwFOcgTIRRiHxFcLwE2VjvkSm1VZqEkSR0NtAG1AtrE"
        },
        "get-graph-nodes": {
          "handler": "src/infrastructure/api/graph-node-api.handler",
          "events": [
            {
              "http": {
                "path": "graph-nodes",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-get-graph-nodes",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetDashgraphDashnodesLambdaVersion9aG8JlBxWP7ANlGW4eXrqQHnv5HeohkLX66L0bswg"
        },
        "get-graph-node-by-id": {
          "handler": "src/infrastructure/api/graph-node-api.handler",
          "events": [
            {
              "http": {
                "path": "graph-nodes/{id}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-get-graph-node-by-id",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetDashgraphDashnodeDashbyDashidLambdaVersione126PoscJErikkwBzzM1ysNxqcuxgDGCw9ZsLa0Dw"
        },
        "update-graph-node": {
          "handler": "src/infrastructure/api/graph-node-api.handler",
          "events": [
            {
              "http": {
                "path": "graph-nodes/{id}",
                "method": "put",
                "request": {
                  "schemas": {
                    "application/json": {
                      "definitions": {},
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "title": "UpdateGraphNodeSchema",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "neighbors": {
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-update-graph-node",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateDashgraphDashnodeLambdaVersionw7RrNVXvJ6PUDLAOsT2CXP9qNz4jkPiqtuF2tVOR38g"
        },
        "delete-graph-node": {
          "handler": "src/infrastructure/api/graph-node-api.handler",
          "events": [
            {
              "http": {
                "path": "graph-nodes/{id}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-delete-graph-node",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteDashgraphDashnodeLambdaVersiont04gtP9VlTPCnE5PvmWSsiY89p6kppUzdbI7gSCRgQ"
        },
        "create-edge": {
          "handler": "src/infrastructure/api/edge-api.handler",
          "events": [
            {
              "http": {
                "path": "edges",
                "method": "post",
                "request": {
                  "schemas": {
                    "application/json": {
                      "definitions": {},
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "title": "CreateEdgeSchema",
                      "required": [
                        "from",
                        "target",
                        "cost"
                      ],
                      "properties": {
                        "from": {
                          "type": "string"
                        },
                        "target": {
                          "type": "string"
                        },
                        "cost": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-create-edge",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateDashedgeLambdaVersionvSQf1zSYKRDhWaBxhsI4CtZXVxdirobiQHc89j22PE"
        },
        "get-edges": {
          "handler": "src/infrastructure/api/edge-api.handler",
          "events": [
            {
              "http": {
                "path": "edges",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-get-edges",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetDashedgesLambdaVersionYY6YfIcOEt9P3Vtr1Go2dHjbwOPLU2hCYggkUGnxts"
        },
        "get-edge-by-id": {
          "handler": "src/infrastructure/api/edge-api.handler",
          "events": [
            {
              "http": {
                "path": "edges/{id}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-get-edge-by-id",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetDashedgeDashbyDashidLambdaVersionAgfBx9QTLTuFGsCyJ414BRIvrreI8PzzzOuuUtR2DI"
        },
        "update-edge": {
          "handler": "src/infrastructure/api/edge-api.handler",
          "events": [
            {
              "http": {
                "path": "edges/{id}",
                "method": "put",
                "request": {
                  "schemas": {
                    "application/json": {
                      "definitions": {},
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "title": "UpdateEdgeSchema",
                      "properties": {
                        "from": {
                          "type": "string"
                        },
                        "target": {
                          "type": "string"
                        },
                        "cost": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-update-edge",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateDashedgeLambdaVersionWc1s9g46vWdvb2GX06h2reqTTXd0RokKy1EdFILVM"
        },
        "delete-edge": {
          "handler": "src/infrastructure/api/edge-api.handler",
          "events": [
            {
              "http": {
                "path": "edges/{id}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "path-finder-dev-ny-delete-edge",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteDashedgeLambdaVersionA95gSEsgdkpnzXPWhhPC9aTUxWMwONreR8fFNrXxecY"
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: awslabs\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: aws-labs-api\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: path-finder\ncustom:\n  stage: ${env:SERVICE_STAGE}\n  region: ${env:REGION}\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  stage: ${self:custom.stage}\n  region: ${self:custom.region}\n  environment: ${file(serverless-env.yml)}\n\nfunctions:\n  - ${file(serverless/api/graph-nodes.yml)}\n  - ${file(serverless/api/edges.yml)}\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "4a25d6e58babbd2c373b3292af7ad199",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "cd3da378-602f-49ad-8f0f-38953c1a8390",
    "orgName": "awslabs",
    "userId": "zdLKM071Bflxz7h26P",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "ih3PEprmEwrm5A8iEQz8wC",
          "awsAccountId": "905418451804",
          "status": "alive"
        }
      ],
      "serviceAppId": "1p17wYTr3sK2Qp7f2q",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "awslabs",
    "subscription": null,
    "userEmail": "nyhasinavalonar@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "905418451804",
    "versionSf": "4.1.12",
    "serviceProviderAwsCfStackName": "path-finder-dev-ny",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-west-1:905418451804:stack/path-finder-dev-ny/1a86d2a0-4376-11ef-8677-026b1c78c4e7",
    "serviceProviderAwsCfStackCreated": "2024-07-16T13:20:00.286Z",
    "serviceProviderAwsCfStackUpdated": "2024-07-17T20:21:29.179Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-get-graph-node-by-id:40",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-GetDashgraphDashnodeDashbyDashidLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetDashedgeDashbyDashidLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-get-edge-by-id:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-GetDashedgeDashbyDashidLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetDashgraphDashnodesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-get-graph-nodes:41",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-GetDashgraphDashnodesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateDashgraphDashnodeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-update-graph-node:40",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-UpdateDashgraphDashnodeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateDashedgeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-create-edge:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-CreateDashedgeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetDashedgesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-get-edges:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-GetDashedgesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteDashedgeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-delete-edge:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-DeleteDashedgeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateDashedgeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-update-edge:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-UpdateDashedgeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteDashgraphDashnodeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-delete-graph-node:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-DeleteDashgraphDashnodeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateDashgraphDashnodeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:path-finder-dev-ny-create-graph-node:45",
        "Description": "Current Lambda function version",
        "ExportName": "sls-path-finder-dev-ny-CreateDashgraphDashnodeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://kjbgynlou4.execute-api.eu-west-1.amazonaws.com/dev-ny",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-path-finder-dev-ny-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "path-finder-dev-ny-serverlessdeploymentbucket-fg6n5uht7tsr",
        "ExportName": "sls-path-finder-dev-ny-ServerlessDeploymentBucketName"
      }
    ]
  }
}