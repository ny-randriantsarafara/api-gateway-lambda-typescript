{
  "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/cosfa": {
    "versionSfCore": null,
    "versionFramework": "4.1.12",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "awslabs",
            "app": "aws-labs-api",
            "service": "cosfa",
            "custom": {
              "stage": "dev-ny",
              "region": "eu-west-1"
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev-ny",
              "region": "eu-west-1",
              "environment": {
                "SERVICE_STAGE": "dev-ny",
                "REGION": "eu-west-1",
                "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "GetDashplayersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-players"
                    }
                  },
                  "GetDashplayerDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-player-by-id"
                    }
                  },
                  "CreateDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-create-player"
                    }
                  },
                  "UpdateDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-update-player"
                    }
                  },
                  "DeleteDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-delete-player"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "cosfa",
                                "dev-ny",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "cosfa",
                            "dev-ny",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashplayersLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-get-players",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashplayersLogGroup"
                    ]
                  },
                  "GetDashplayerDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-get-player-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashplayerDashbyDashidLogGroup"
                    ]
                  },
                  "CreateDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-create-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashplayerLogGroup"
                    ]
                  },
                  "UpdateDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-update-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashplayerLogGroup"
                    ]
                  },
                  "DeleteDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-delete-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashplayerLogGroup"
                    ]
                  },
                  "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashplayersLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashplayerDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-ny-cosfa",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourcePlayers": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "players",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePlayersIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPlayersGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashplayersLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashplayersLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashplayerDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "GetDashplayerDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodPlayersPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "DeleteDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayCosfaRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "cosfa-dev-ny | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodPlayersPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreatePlayerSchema",
                        "required": [
                          "firstName",
                          "lastName"
                        ],
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdatePlayerSchema",
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayDeployment1720999198011": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev-ny"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodPlayersGet",
                      "ApiGatewayMethodPlayersIdVarGet",
                      "ApiGatewayMethodPlayersPost",
                      "ApiGatewayMethodPlayersIdVarPut",
                      "ApiGatewayMethodPlayersIdVarDelete"
                    ]
                  },
                  "GetDashplayersLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashplayersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashplayerDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-ServerlessDeploymentBucketName"
                    }
                  },
                  "GetDashplayersLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-GetDashplayersLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-GetDashplayerDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-CreateDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-UpdateDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-DeleteDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev-ny"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "get-players": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-get-players",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
              },
              "get-player-by-id": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "get",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-get-player-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
              },
              "create-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreatePlayerSchema",
                            "required": [
                              "firstName",
                              "lastName"
                            ],
                            "properties": {
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-create-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
              },
              "update-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "put",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        },
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdatePlayerSchema",
                            "properties": {
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-update-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
              },
              "delete-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "delete",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-delete-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
              }
            }
          },
          "configFileDirPath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/cosfa",
          "config": {
            "type": "env"
          },
          "options": {},
          "stage": "${self:custom.stage}",
          "dashboard": null
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "awslabs",
            "app": "aws-labs-api",
            "service": "cosfa",
            "custom": {
              "stage": "dev-ny",
              "region": "eu-west-1"
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev-ny",
              "region": "eu-west-1",
              "environment": {
                "SERVICE_STAGE": "dev-ny",
                "REGION": "eu-west-1",
                "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "GetDashplayersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-players"
                    }
                  },
                  "GetDashplayerDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-player-by-id"
                    }
                  },
                  "CreateDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-create-player"
                    }
                  },
                  "UpdateDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-update-player"
                    }
                  },
                  "DeleteDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-delete-player"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "cosfa",
                                "dev-ny",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "cosfa",
                            "dev-ny",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashplayersLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-get-players",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashplayersLogGroup"
                    ]
                  },
                  "GetDashplayerDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-get-player-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashplayerDashbyDashidLogGroup"
                    ]
                  },
                  "CreateDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-create-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashplayerLogGroup"
                    ]
                  },
                  "UpdateDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-update-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashplayerLogGroup"
                    ]
                  },
                  "DeleteDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-delete-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashplayerLogGroup"
                    ]
                  },
                  "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashplayersLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashplayerDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-ny-cosfa",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourcePlayers": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "players",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePlayersIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPlayersGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashplayersLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashplayersLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashplayerDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "GetDashplayerDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodPlayersPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "DeleteDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayCosfaRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "cosfa-dev-ny | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodPlayersPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreatePlayerSchema",
                        "required": [
                          "firstName",
                          "lastName"
                        ],
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdatePlayerSchema",
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayDeployment1720999198011": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev-ny"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodPlayersGet",
                      "ApiGatewayMethodPlayersIdVarGet",
                      "ApiGatewayMethodPlayersPost",
                      "ApiGatewayMethodPlayersIdVarPut",
                      "ApiGatewayMethodPlayersIdVarDelete"
                    ]
                  },
                  "GetDashplayersLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashplayersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashplayerDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-ServerlessDeploymentBucketName"
                    }
                  },
                  "GetDashplayersLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-GetDashplayersLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-GetDashplayerDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-CreateDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-UpdateDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-DeleteDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev-ny"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "get-players": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-get-players",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
              },
              "get-player-by-id": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "get",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-get-player-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
              },
              "create-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreatePlayerSchema",
                            "required": [
                              "firstName",
                              "lastName"
                            ],
                            "properties": {
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-create-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
              },
              "update-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "put",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        },
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdatePlayerSchema",
                            "properties": {
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-update-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
              },
              "delete-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "delete",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-delete-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
              }
            }
          },
          "configFileDirPath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/cosfa",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "${self:custom.stage}",
          "dashboard": null
        },
        "resolvers": {}
      },
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "awslabs",
            "app": "aws-labs-api",
            "service": "cosfa",
            "custom": {
              "stage": "dev-ny",
              "region": "eu-west-1"
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev-ny",
              "region": "eu-west-1",
              "environment": {
                "SERVICE_STAGE": "dev-ny",
                "REGION": "eu-west-1",
                "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "GetDashplayersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-players"
                    }
                  },
                  "GetDashplayerDashbyDashidLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-player-by-id"
                    }
                  },
                  "CreateDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-create-player"
                    }
                  },
                  "UpdateDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-update-player"
                    }
                  },
                  "DeleteDashplayerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/cosfa-dev-ny-delete-player"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "cosfa",
                                "dev-ny",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "cosfa",
                            "dev-ny",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashplayersLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-get-players",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashplayersLogGroup"
                    ]
                  },
                  "GetDashplayerDashbyDashidLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-get-player-by-id",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDashplayerDashbyDashidLogGroup"
                    ]
                  },
                  "CreateDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-create-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateDashplayerLogGroup"
                    ]
                  },
                  "UpdateDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-update-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateDashplayerLogGroup"
                    ]
                  },
                  "DeleteDashplayerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                      },
                      "Handler": "src/infrastructure/api/players-api.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "cosfa-dev-ny-delete-player",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "SERVICE_STAGE": "dev-ny",
                          "REGION": "eu-west-1",
                          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteDashplayerLogGroup"
                    ]
                  },
                  "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashplayersLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDashplayerDashbyDashidLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteDashplayerLambdaFunction"
                      },
                      "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-ny-cosfa",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourcePlayers": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "players",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePlayersIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPlayersGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashplayersLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDashplayersLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDashplayerDashbyDashidLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "GetDashplayerDashbyDashidLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodPlayersPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "CreateDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPlayersIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {
                        "method.request.path.id": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePlayersIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteDashplayerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayCosfaRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "DeleteDashplayerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayCosfaRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "cosfa-dev-ny | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodPlayersPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "CreatePlayerSchema",
                        "required": [
                          "firstName",
                          "lastName"
                        ],
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "definitions": {},
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "UpdatePlayerSchema",
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ApiGatewayDeployment1720999198011": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev-ny"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodPlayersGet",
                      "ApiGatewayMethodPlayersIdVarGet",
                      "ApiGatewayMethodPlayersPost",
                      "ApiGatewayMethodPlayersIdVarPut",
                      "ApiGatewayMethodPlayersIdVarDelete"
                    ]
                  },
                  "GetDashplayersLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashplayersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDashplayerDashbyDashidLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteDashplayerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteDashplayerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-ServerlessDeploymentBucketName"
                    }
                  },
                  "GetDashplayersLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-GetDashplayersLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDashplayerDashbyDashidLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-GetDashplayerDashbyDashidLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-CreateDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-UpdateDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteDashplayerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-DeleteDashplayerLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev-ny"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-cosfa-dev-ny-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "get-players": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-get-players",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
              },
              "get-player-by-id": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "get",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-get-player-by-id",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
              },
              "create-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "CreatePlayerSchema",
                            "required": [
                              "firstName",
                              "lastName"
                            ],
                            "properties": {
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-create-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
              },
              "update-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "put",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        },
                        "schemas": {
                          "application/json": {
                            "definitions": {},
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "title": "UpdatePlayerSchema",
                            "properties": {
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-update-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
              },
              "delete-player": {
                "handler": "src/infrastructure/api/players-api.handler",
                "events": [
                  {
                    "http": {
                      "path": "players/{id}",
                      "method": "delete",
                      "request": {
                        "parameters": {
                          "method.request.path.id": true
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "cosfa-dev-ny-delete-player",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
              }
            }
          },
          "configFileDirPath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/cosfa",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "${self:custom.stage}",
          "dashboard": null
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/Users/nyhasinavalonarandriantsarafara/Works/labs/aws-labs-api/services/cosfa",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "awslabs",
      "app": "aws-labs-api",
      "service": "cosfa",
      "custom": {
        "stage": "dev-ny",
        "region": "eu-west-1"
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev-ny",
        "region": "eu-west-1",
        "environment": {
          "SERVICE_STAGE": "dev-ny",
          "REGION": "eu-west-1",
          "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs"
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "GetDashplayersLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-players"
              }
            },
            "GetDashplayerDashbyDashidLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/cosfa-dev-ny-get-player-by-id"
              }
            },
            "CreateDashplayerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/cosfa-dev-ny-create-player"
              }
            },
            "UpdateDashplayerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/cosfa-dev-ny-update-player"
              }
            },
            "DeleteDashplayerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/cosfa-dev-ny-delete-player"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "cosfa",
                          "dev-ny",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cosfa-dev-ny*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "cosfa",
                      "dev-ny",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "GetDashplayersLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                },
                "Handler": "src/infrastructure/api/players-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "cosfa-dev-ny-get-players",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetDashplayersLogGroup"
              ]
            },
            "GetDashplayerDashbyDashidLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                },
                "Handler": "src/infrastructure/api/players-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "cosfa-dev-ny-get-player-by-id",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetDashplayerDashbyDashidLogGroup"
              ]
            },
            "CreateDashplayerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                },
                "Handler": "src/infrastructure/api/players-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "cosfa-dev-ny-create-player",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateDashplayerLogGroup"
              ]
            },
            "UpdateDashplayerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                },
                "Handler": "src/infrastructure/api/players-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "cosfa-dev-ny-update-player",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateDashplayerLogGroup"
              ]
            },
            "DeleteDashplayerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/cosfa/dev-ny/1720999199740-2024-07-14T23:19:59.740Z/cosfa.zip"
                },
                "Handler": "src/infrastructure/api/players-api.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "cosfa-dev-ny-delete-player",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "SERVICE_STAGE": "dev-ny",
                    "REGION": "eu-west-1",
                    "DATABASE_URI": "mongodb+srv://awslabsdev:;asmIy0gnhpl@aws-labs.gvoqiqe.mongodb.net/?retryWrites=true&w=majority&appName=aws-labs",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteDashplayerLogGroup"
              ]
            },
            "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetDashplayersLambdaFunction"
                },
                "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
              }
            },
            "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetDashplayerDashbyDashidLambdaFunction"
                },
                "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
              }
            },
            "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateDashplayerLambdaFunction"
                },
                "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
              }
            },
            "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateDashplayerLambdaFunction"
                },
                "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
              }
            },
            "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteDashplayerLambdaFunction"
                },
                "CodeSha256": "sMcR9UBL/kP6VM5yHKl67Bi5aa6XffKKhM/r+2odAmo="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-ny-cosfa",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourcePlayers": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "players",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePlayersIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePlayers"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPlayersGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePlayers"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetDashplayersLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetDashplayersLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPlayersIdVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {
                  "method.request.path.id": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePlayersIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetDashplayerDashbyDashidLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayCosfaRequestValidator"
                }
              },
              "DependsOn": [
                "GetDashplayerDashbyDashidLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPlayersPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePlayers"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateDashplayerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayCosfaRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodPlayersPostApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "CreateDashplayerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPlayersIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {
                  "method.request.path.id": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePlayersIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateDashplayerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayCosfaRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "UpdateDashplayerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPlayersIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {
                  "method.request.path.id": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePlayersIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteDashplayerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayCosfaRequestValidator"
                }
              },
              "DependsOn": [
                "DeleteDashplayerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayCosfaRequestValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true,
                "Name": "cosfa-dev-ny | Validate request body and querystring parameters"
              }
            },
            "ApiGatewayMethodPlayersPostApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "definitions": {},
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "title": "CreatePlayerSchema",
                  "required": [
                    "firstName",
                    "lastName"
                  ],
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "ApiGatewayMethodPlayersIdVarPutApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "definitions": {},
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "title": "UpdatePlayerSchema",
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "ApiGatewayDeployment1720999198011": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev-ny"
              },
              "DependsOn": [
                "ApiGatewayMethodPlayersGet",
                "ApiGatewayMethodPlayersIdVarGet",
                "ApiGatewayMethodPlayersPost",
                "ApiGatewayMethodPlayersIdVarPut",
                "ApiGatewayMethodPlayersIdVarDelete"
              ]
            },
            "GetDashplayersLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetDashplayersLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetDashplayerDashbyDashidLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetDashplayerDashbyDashidLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateDashplayerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateDashplayerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateDashplayerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateDashplayerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteDashplayerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteDashplayerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-cosfa-dev-ny-ServerlessDeploymentBucketName"
              }
            },
            "GetDashplayersLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
              },
              "Export": {
                "Name": "sls-cosfa-dev-ny-GetDashplayersLambdaFunctionQualifiedArn"
              }
            },
            "GetDashplayerDashbyDashidLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
              },
              "Export": {
                "Name": "sls-cosfa-dev-ny-GetDashplayerDashbyDashidLambdaFunctionQualifiedArn"
              }
            },
            "CreateDashplayerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
              },
              "Export": {
                "Name": "sls-cosfa-dev-ny-CreateDashplayerLambdaFunctionQualifiedArn"
              }
            },
            "UpdateDashplayerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
              },
              "Export": {
                "Name": "sls-cosfa-dev-ny-UpdateDashplayerLambdaFunctionQualifiedArn"
              }
            },
            "DeleteDashplayerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
              },
              "Export": {
                "Name": "sls-cosfa-dev-ny-DeleteDashplayerLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev-ny"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-cosfa-dev-ny-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "get-players": {
          "handler": "src/infrastructure/api/players-api.handler",
          "events": [
            {
              "http": {
                "path": "players",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "cosfa-dev-ny-get-players",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetDashplayersLambdaVersionKx6eApvUmY4FRhrcR5nXSJq4cF548vSZRn2KitTlhs"
        },
        "get-player-by-id": {
          "handler": "src/infrastructure/api/players-api.handler",
          "events": [
            {
              "http": {
                "path": "players/{id}",
                "method": "get",
                "request": {
                  "parameters": {
                    "method.request.path.id": true
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "cosfa-dev-ny-get-player-by-id",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetDashplayerDashbyDashidLambdaVersionIhw9CuPDU7t0vQtfNKuqhSlvegNmi29Y8Cxh85lBdZ4"
        },
        "create-player": {
          "handler": "src/infrastructure/api/players-api.handler",
          "events": [
            {
              "http": {
                "path": "players",
                "method": "post",
                "request": {
                  "schemas": {
                    "application/json": {
                      "definitions": {},
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "title": "CreatePlayerSchema",
                      "required": [
                        "firstName",
                        "lastName"
                      ],
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "cosfa-dev-ny-create-player",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateDashplayerLambdaVersionox0HqX7FBUl2vzwE1EkPiFpi0hVNj2PPQsbsYgx3bo"
        },
        "update-player": {
          "handler": "src/infrastructure/api/players-api.handler",
          "events": [
            {
              "http": {
                "path": "players/{id}",
                "method": "put",
                "request": {
                  "parameters": {
                    "method.request.path.id": true
                  },
                  "schemas": {
                    "application/json": {
                      "definitions": {},
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "title": "UpdatePlayerSchema",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "cosfa-dev-ny-update-player",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateDashplayerLambdaVersion7GGoaZ6oMvp8iTYcw939Nx0RSqVWUEwPy1srhjdzfrg"
        },
        "delete-player": {
          "handler": "src/infrastructure/api/players-api.handler",
          "events": [
            {
              "http": {
                "path": "players/{id}",
                "method": "delete",
                "request": {
                  "parameters": {
                    "method.request.path.id": true
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "cosfa-dev-ny-delete-player",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteDashplayerLambdaVersionueeJPNpfEYGaDOVTdIqZty43s1s33lp8IPD5znbD3c"
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: awslabs\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: aws-labs-api\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: cosfa\ncustom:\n  stage: ${env:SERVICE_STAGE}\n  region: ${env:REGION}\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  stage: ${self:custom.stage}\n  region: ${self:custom.region}\n  environment: ${file(serverless-env.yml)}\n\nfunctions:\n  - ${file(serverless/api/players.yml)}\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "6ecc1db6c2e3f9fbf96f57d7fc2e98d5",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "cd3da378-602f-49ad-8f0f-38953c1a8390",
    "orgName": "awslabs",
    "userId": "zdLKM071Bflxz7h26P",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "ih3PEprmEwrm5A8iEQz8wC",
          "awsAccountId": "905418451804",
          "status": "alive"
        }
      ],
      "serviceAppId": "1p17wYTr3sK2Qp7f2q",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "awslabs",
    "subscription": null,
    "userEmail": "nyhasinavalonar@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "905418451804",
    "versionSf": "4.1.12",
    "serviceProviderAwsCfStackName": "cosfa-dev-ny",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-west-1:905418451804:stack/cosfa-dev-ny/7aa76ca0-4234-11ef-8653-02146247b501",
    "serviceProviderAwsCfStackCreated": "2024-07-14T22:57:43.587Z",
    "serviceProviderAwsCfStackUpdated": "2024-07-14T23:20:04.918Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteDashplayerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:cosfa-dev-ny-delete-player:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-cosfa-dev-ny-DeleteDashplayerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetDashplayerDashbyDashidLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:cosfa-dev-ny-get-player-by-id:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-cosfa-dev-ny-GetDashplayerDashbyDashidLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateDashplayerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:cosfa-dev-ny-update-player:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-cosfa-dev-ny-UpdateDashplayerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetDashplayersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:cosfa-dev-ny-get-players:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-cosfa-dev-ny-GetDashplayersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateDashplayerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:905418451804:function:cosfa-dev-ny-create-player:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-cosfa-dev-ny-CreateDashplayerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://2l0fu8q0eh.execute-api.eu-west-1.amazonaws.com/dev-ny",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-cosfa-dev-ny-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "cosfa-dev-ny-serverlessdeploymentbucket-2pv8dbtyy9bg",
        "ExportName": "sls-cosfa-dev-ny-ServerlessDeploymentBucketName"
      }
    ]
  }
}